---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.4
  labels:
    cluster.x-k8s.io/v1beta1: v1beta1
  name: k0scontrolplanes.controlplane.cluster.x-k8s.io
spec:
  group: controlplane.cluster.x-k8s.io
  names:
    kind: K0sControlPlane
    listKind: K0sControlPlaneList
    plural: k0scontrolplanes
    singular: k0scontrolplane
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              k0sConfigSpec:
                properties:
                  args:
                    description: 'Args specifies extra arguments to be passed to k0s
                      worker. See: https://docs.k0sproject.io/stable/advanced/worker-configuration/'
                    items:
                      type: string
                    type: array
                  downloadURL:
                    description: DownloadURL specifies the URL to download k0s binary
                      from. If specified the version field is ignored and what ever
                      version is downloaded from the URL is used.
                    type: string
                  files:
                    description: Files specifies extra files to be passed to user_data
                      upon creation.
                    items:
                      properties:
                        content:
                          type: string
                        path:
                          type: string
                        permissions:
                          type: string
                      type: object
                    type: array
                  k0s:
                    description: K0s defines the k0s configuration. Note, that some
                      fields will be overwritten by k0smotron. If empty, will be used
                      default configuration. @see https://docs.k0sproject.io/stable/configuration/
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  postStartCommands:
                    description: PostStartCommands specifies commands to be run after
                      starting k0s worker.
                    items:
                      type: string
                    type: array
                  preInstalledK0s:
                    description: PreInstallK0s specifies whether k0s binary is pre-installed
                      on the node.
                    type: boolean
                  preStartCommands:
                    description: PreStartCommands specifies commands to be run before
                      starting k0s worker.
                    items:
                      type: string
                    type: array
                type: object
              k0sVersion:
                description: K0sVersion defines the k0s version to be deployed. If
                  empty k0smotron will pick it automatically.
                type: string
              machineTemplate:
                properties:
                  infrastructureRef:
                    description: InfrastructureRef is a required reference to a custom
                      resource offered by an infrastructure provider.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: 'If referring to a piece of an object instead
                          of an entire object, this string should contain a valid
                          JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within
                          a pod, this would take on a value like: "spec.containers{name}"
                          (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]"
                          (container with index 2 in this pod). This syntax is chosen
                          only to have some well-defined way of referencing a part
                          of an object. TODO: this design is not final and this field
                          is subject to change in the future.'
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      namespace:
                        description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                        type: string
                      resourceVersion:
                        description: 'Specific resourceVersion to which this reference
                          is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                        type: string
                      uid:
                        description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                required:
                - infrastructureRef
                type: object
              replicas:
                default: 1
                format: int32
                type: integer
            required:
            - k0sConfigSpec
            - machineTemplate
            type: object
          status:
            properties:
              controlPlaneReady:
                type: boolean
              externalManagedControlPlane:
                type: boolean
              initialized:
                type: boolean
              ready:
                description: Ready denotes that the control plane is ready
                type: boolean
            required:
            - controlPlaneReady
            - externalManagedControlPlane
            - initialized
            - ready
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
