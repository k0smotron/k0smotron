# This cluster template is used when a cluster needs to be deployed using the Out-Of-Cluster mode, 
# i.e. the control plane is running on CAPI managed Machines.
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
  namespace: ${NAMESPACE}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
      - 192.168.0.0/16
    serviceDomain: cluster.local
    services:
      cidrBlocks:
      - 10.128.0.0/12
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: K0sControlPlane
    name: ${CLUSTER_NAME}-docker-test
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: DockerCluster
    name: docker-test
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerMachineTemplate
metadata:
  name: docker-test-cp-template
  namespace: ${NAMESPACE}
spec:
  template:
    spec:
      customImage: kindest/node:v1.31.0
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: K0sControlPlane
metadata:
  name: ${CLUSTER_NAME}-docker-test
  namespace: ${NAMESPACE}
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: v1.30.1+k0s.0
  updateStrategy: ${UPDATE_STRATEGY}
  k0sConfigSpec:
    args:
    - --single
    k0s:
      apiVersion: k0s.k0sproject.io/v1beta1
      kind: ClusterConfig
      metadata:
        name: k0s
      spec:
        api:
          extraArgs:
            anonymous-auth: "true"
        telemetry:
          enabled: false
        network:
          controlPlaneLoadBalancing:
            enabled: false 
    files:
    - path: /tmp/test-file-secret
      contentFrom: 
        secretRef: 
          name: test-file-secret
          key: value
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: DockerMachineTemplate
      name: docker-test-cp-template
      namespace: ${NAMESPACE}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerCluster
metadata:
  name: docker-test
  namespace: ${NAMESPACE}
spec:
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Machine
metadata:
  name:  ${CLUSTER_NAME}-docker-test-worker-0
  namespace: ${NAMESPACE}
spec:
  version: v1.30.1
  clusterName: ${CLUSTER_NAME}
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
      kind: K0sWorkerConfig
      name: docker-test-worker-0
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: DockerMachine
    name: ${CLUSTER_NAME}-docker-test-worker-0
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: K0sWorkerConfig
metadata:
  name: docker-test-worker-0
  namespace: ${NAMESPACE}
spec:
  # version is deliberately different to be able to verify we actually pick it up :)
  version: v1.30.1+k0s.0
  args:
    - --labels=k0sproject.io/foo=bar
  preStartCommands:
    - echo -n "pre-start" > /tmp/pre-start
  postStartCommands:
    - echo -n "post-start" > /tmp/post-start
  files:
    - path: /tmp/test-file
      content: test-file
    - path: /tmp/test-file-secret
      contentFrom: 
        secretRef: 
          name: test-file-secret
          key: value
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerMachine
metadata:
  name: ${CLUSTER_NAME}-docker-test-worker-0
  namespace: ${NAMESPACE}
spec:
  customImage: kindest/node:v1.31.0
---
apiVersion: v1
kind: Secret
metadata:
  name: test-file-secret
  namespace: ${NAMESPACE}
type: Opaque
data:
  value: dGVzdA==